
to-report calc_house_base_price [ house ]
  let pr HOUSE-BASE-VALUE * SMI 
  ;; apply ipc to a house
  set pr pr + (pr * IPC * 0.01)
  ;; apply an increment based on the distance to the city council
  ;; 1 unit is 1% more expensive
  set pr pr + (pr * 0.01 * [distance city-council] of house)
  report pr
end

to-report calc_seed_house_price [ house ]
  let pr HOUSE-BASE-VALUE * SMI 
  ;; apply ipc to a house
  set pr pr + random pr
  report pr
end


to-report calc_owned_house_base_price [ house ]
  let house-base-price [ base-price ] of house
  let house-owner [ owner ] of house
  report house-base-price + ( ( house-base-price * 0.25 ) * ( [ social-status ] of house-owner / SOCIAL-STATUSES ) )
end

to-report calc_owned_house_rfq_price [ recipient house ]
  let house-base-price [ base-price ] of house
  report house-base-price + ( ( house-base-price * 0.1 ) * ( [ social-status ] of recipient / SOCIAL-STATUSES ) )
end


to-report calc_house_offer_price [ house ]
  let house-base-price [ base-price ] of house
  report house-base-price - ( calc_differential_price house )
end

to-report calc_house_seller_price [ house ]
  let house-base-price [ base-price ] of house
  report house-base-price + ( calc_differential_price house )
end

to-report calc_differential_price [ house ]
  let house-base-price [ base-price ] of house
  report ( 0.25 * ( house-base-price - min [ base-price ] of houses in-radius 5 ) / ( social-status + 1 ) )
end

to-report calc_negotiation_score [ human ]
  report [ eloquence + expertise ] of human
end

to-report calc_money_build_house
  ;; required SMI
  let pr-required SMI * HOUSE-CONSTRUCTION-REQUIRED-SMI
  ;; required IPC%
  set pr-required pr-required + (pr-required * IPC * 0.01)
  report pr-required
end


to-report calc_money_build_house_2
  let price -1
  if any? houses in-radius 10 [
    let base_vacias 0.4 * mean [base-price] of houses with [empty] in-radius 10
    let base_ocupadas 0.6 * mean [base-price] of houses with [not empty] in-radius 10
    set price base_vacias + base_ocupadas
  ]
  report price
end 
 


to-report get_coords_new_house
  ;; reports one of the nearest patches to the city council
  ;; this could be modified to apply a different behaviour
  ;; maybe a base price to construct in a certain patch and return the cheapest
  report one-of patches with [free] with-min [ distance one-of councils ]
end



